/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package my.nda;

import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

import javax.swing.JOptionPane;

/**
 *
 * @author sarah
 */
public class Hailstorm extends javax.swing.JFrame {

    Connection con;
    PreparedStatement st;
    
    String location, color, updraft;
    float temp;
    String hail_likelihood, hail_size;
    
    int color_flag = 0;
    int flag = 0;
    int err_flag = 0;
    
    /**
     * Creates new form Hailstorm
     */
    public Hailstorm() {
        initComponents();
        Connect_SQL();
        Record.setEnabled(false);
    }

    public void Connect_SQL()
    {
      try 
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost:3308/natural_disaster_alert", "root", "");
        } 
      
      catch (ClassNotFoundException | SQLException ex) 
        {
            Logger.getLogger(Hailstorm.class.getName()).log(Level.SEVERE, null, ex);
        } 
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel = new javax.swing.JPanel();
        Hailstorm_Title = new javax.swing.JLabel();
        Color_Of_Cloud_Label = new javax.swing.JLabel();
        Temperature_Label = new javax.swing.JLabel();
        Updraft_Label = new javax.swing.JLabel();
        Color_Combo = new javax.swing.JComboBox<>();
        Updraft_Combo = new javax.swing.JComboBox<>();
        Temperature_Field = new javax.swing.JTextField();
        Predict = new javax.swing.JButton();
        Prediction_Label = new javax.swing.JLabel();
        Hail_Likelihood_Label = new javax.swing.JLabel();
        Hail_Size_Estimate_Label = new javax.swing.JLabel();
        Hail_Size_Estimate_Field = new javax.swing.JTextField();
        Record = new javax.swing.JButton();
        Reset = new javax.swing.JButton();
        Go_Back = new javax.swing.JButton();
        Hail_Likelihood_Field = new javax.swing.JTextField();
        Location_Label = new javax.swing.JLabel();
        Location_Field = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel.setBackground(new java.awt.Color(204, 204, 255));
        jPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 15));

        Hailstorm_Title.setFont(new java.awt.Font("Times New Roman", 3, 30)); // NOI18N
        Hailstorm_Title.setForeground(new java.awt.Color(102, 102, 102));
        Hailstorm_Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Hailstorm_Title.setText("Hailstorm");
        Hailstorm_Title.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        Color_Of_Cloud_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Color_Of_Cloud_Label.setForeground(new java.awt.Color(51, 51, 51));
        Color_Of_Cloud_Label.setText("Color of Cloud: ");

        Temperature_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Temperature_Label.setForeground(new java.awt.Color(51, 51, 51));
        Temperature_Label.setText("Air Temperature (in Â°C): ");

        Updraft_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Updraft_Label.setForeground(new java.awt.Color(51, 51, 51));
        Updraft_Label.setText("Noticeable Updraft: ");

        Color_Combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Color_Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "....", "White", "Whitish Green" }));
        Color_Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Color_ComboActionPerformed(evt);
            }
        });

        Updraft_Combo.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Updraft_Combo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "....", "Yes", "No" }));
        Updraft_Combo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Updraft_ComboActionPerformed(evt);
            }
        });

        Temperature_Field.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Temperature_Field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Temperature_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Temperature_FieldActionPerformed(evt);
            }
        });

        Predict.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Predict.setText("Predict");
        Predict.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PredictActionPerformed(evt);
            }
        });

        Prediction_Label.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        Prediction_Label.setForeground(new java.awt.Color(51, 51, 51));
        Prediction_Label.setText("Prediction: ");

        Hail_Likelihood_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Hail_Likelihood_Label.setForeground(new java.awt.Color(51, 51, 51));
        Hail_Likelihood_Label.setText("Likelihood of hailstorm: ");

        Hail_Size_Estimate_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Hail_Size_Estimate_Label.setForeground(new java.awt.Color(51, 51, 51));
        Hail_Size_Estimate_Label.setText("Estimated Hail Size (inches/cm): ");

        Hail_Size_Estimate_Field.setEditable(false);
        Hail_Size_Estimate_Field.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hail_Size_Estimate_Field.setForeground(new java.awt.Color(204, 0, 0));
        Hail_Size_Estimate_Field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hail_Size_Estimate_Field.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Hail_Size_Estimate_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hail_Size_Estimate_FieldActionPerformed(evt);
            }
        });

        Record.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Record.setText("Record");
        Record.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RecordActionPerformed(evt);
            }
        });

        Reset.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Reset.setText("Reset");
        Reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetActionPerformed(evt);
            }
        });

        Go_Back.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        Go_Back.setText("Go Back");
        Go_Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Go_BackActionPerformed(evt);
            }
        });

        Hail_Likelihood_Field.setEditable(false);
        Hail_Likelihood_Field.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Hail_Likelihood_Field.setForeground(new java.awt.Color(204, 0, 0));
        Hail_Likelihood_Field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Hail_Likelihood_Field.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        Hail_Likelihood_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hail_Likelihood_FieldActionPerformed(evt);
            }
        });

        Location_Label.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        Location_Label.setForeground(new java.awt.Color(51, 51, 51));
        Location_Label.setText("Location: ");

        Location_Field.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        Location_Field.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Location_Field.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Location_FieldActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/my/nda/NDA_Logo.png"))); // NOI18N

        javax.swing.GroupLayout jPanelLayout = new javax.swing.GroupLayout(jPanel);
        jPanel.setLayout(jPanelLayout);
        jPanelLayout.setHorizontalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Prediction_Label)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Hail_Likelihood_Label)
                            .addComponent(Hail_Size_Estimate_Label))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Hail_Likelihood_Field, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                            .addComponent(Hail_Size_Estimate_Field))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Predict))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addComponent(Hailstorm_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Record)
                        .addGap(18, 18, 18)
                        .addComponent(Reset)
                        .addGap(18, 18, 18)
                        .addComponent(Go_Back)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Temperature_Label)
                    .addComponent(Updraft_Label)
                    .addComponent(Color_Of_Cloud_Label)
                    .addComponent(Location_Label))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Color_Combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Temperature_Field)
                    .addComponent(Location_Field)
                    .addComponent(Updraft_Combo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 173, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(41, 41, 41))
        );
        jPanelLayout.setVerticalGroup(
            jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLayout.createSequentialGroup()
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLayout.createSequentialGroup()
                        .addComponent(Hailstorm_Title, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(3, 3, 3)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Location_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Location_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Color_Of_Cloud_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Color_Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Temperature_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Temperature_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Updraft_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Updraft_Combo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addComponent(Predict)
                .addGap(18, 18, 18)
                .addComponent(Prediction_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hail_Likelihood_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hail_Likelihood_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hail_Size_Estimate_Label, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hail_Size_Estimate_Field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Record)
                    .addComponent(Reset)
                    .addComponent(Go_Back))
                .addContainerGap(179, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PredictActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PredictActionPerformed
    switch (Color_Combo.getSelectedIndex())    
    {
        case 1:
        {
            color_flag = 0;
            break;
        }
        
        case 2:
        {
            color_flag = 1;
            break;
        }
        
        default:
        {
            JOptionPane.showMessageDialog(this, "Invalid Color");
            err_flag = 1;
        }
    }
    
    temp = Float.parseFloat(Temperature_Field.getText());
    
    if (temp >= 27 && temp <= 45)
    {
        flag+=2;
        
        switch (Updraft_Combo.getSelectedIndex())
        {
            case 1:
            {
                flag+=2;
            }
            
            case 2:
            {
                break;
            }
            
            default:
            {
                JOptionPane.showMessageDialog(this, "Invalid Option");
                err_flag = 1;
            }
        }
    }
    
    else if (temp >= 27 && temp > 45)
    {
        JOptionPane.showMessageDialog(this, "Invalid temperature. Enter temperature below or equal to 45");
        err_flag = 1;
    }
    
    else 
    {
        JOptionPane.showMessageDialog(this, "Invalid temperature. Enter temperature above or equal to 27");
        err_flag = 1;
    }
    
    if (err_flag == 1)
    {
        JOptionPane.showMessageDialog(this, "Error in one or more fields. Please clarify the error in the required fields.");
        Hail_Likelihood_Field.setText("ERROR");
        Hail_Size_Estimate_Field.setText("ERROR");
        err_flag = 0;
    }
    
    else if (err_flag == 0)
    {
        if (color_flag == 0 && flag == 2)
        {
            Hail_Likelihood_Field.setText("Unlikely");
            Record.setEnabled(false);
        }
        
        else if ((color_flag == 1 && flag == 2) || (color_flag == 0 && flag == 4))
        {
            Hail_Likelihood_Field.setText("Quite likely");
            Record.setEnabled(true);
        }
        
        else if (color_flag == 1 && flag == 4)
        {
            Hail_Likelihood_Field.setText("Most likely");
            Record.setEnabled(true);
        }
        
        if (temp>=27 && temp<=35)
        {
            Hail_Size_Estimate_Field.setText("Between 0.20 inch (0.5 cm) and 0.75 inch (1.9 cm)");
        }
        
        else if (temp>35 && temp<=43)
        {
            Hail_Size_Estimate_Field.setText("Between 0.75 inch (1.9 cm) and 1 inch (2.54 cm)");
        }
        
        else
        {
            Hail_Size_Estimate_Field.setText("Greater than or equal to 1 inch (2.54 cm)");
        }
        
        if ("Unlikely".equals(Hail_Likelihood_Field.getText()))
        {
            Hail_Size_Estimate_Field.setText("Negligible");
        }
        
        color_flag = 0;
        flag = 0;
        
        if (Record.isEnabled() == true)
        {
            Location_Field.setEnabled(false);
            Color_Combo.setEnabled(false);
            Temperature_Field.setEnabled(false);
            Updraft_Combo.setEnabled(false);
        }
    }

    }//GEN-LAST:event_PredictActionPerformed

    private void Color_ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Color_ComboActionPerformed
    // TODO add your handling code here:
    }//GEN-LAST:event_Color_ComboActionPerformed

    private void Temperature_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Temperature_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Temperature_FieldActionPerformed

    private void Updraft_ComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Updraft_ComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Updraft_ComboActionPerformed

    private void Hail_Size_Estimate_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hail_Size_Estimate_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hail_Size_Estimate_FieldActionPerformed

    private void RecordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RecordActionPerformed
    location = Location_Field.getText();
    color = Color_Combo.getSelectedItem().toString();
    updraft = Updraft_Combo.getSelectedItem().toString(); 
    temp = Float.parseFloat(Temperature_Field.getText());
    hail_likelihood = Hail_Likelihood_Field.getText();
    hail_size = Hail_Size_Estimate_Field.getText();
    
    try
        {
        // Add sql query
        st = con.prepareStatement("insert into hailstorm(Location, Color_Of_Cloud, Air_Temperature, Updraft_Confirmation, Hailstorm_Likelihood, Estimated_Hail_Size) values (?, ?, ?, ?, ?, ?)");
        st.setString(1, location);
        st.setString(2, color);
        st.setFloat(3, temp);
        st.setString(4, updraft);
        st.setString(5, hail_likelihood);
        st.setString(6, hail_size);

        int e = st.executeUpdate();

        if(e == 1)
        {
            JOptionPane.showMessageDialog(this, "Disaster Prediction Record Added");
            Record.setEnabled(false);
            Location_Field.setEnabled(true);
            Color_Combo.setEnabled(true);
            Temperature_Field.setEnabled(true);
            Updraft_Combo.setEnabled(true);
    
            Location_Field.setText("");
            Color_Combo.setSelectedIndex(0); 
            Updraft_Combo.setSelectedIndex(0); 
            Temperature_Field.setText("");
            Hail_Likelihood_Field.setText("");
            Hail_Size_Estimate_Field.setText("");
        }

        else
        {
            JOptionPane.showMessageDialog(this, "Disaster Prediction Record Not Added");
        }

        }

        catch (SQLException ex)
        {
        Logger.getLogger(Hailstorm.class.getName()).log(Level.SEVERE, null, ex);
        }//TODO add your handling code here:
    }//GEN-LAST:event_RecordActionPerformed

    private void ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetActionPerformed
    Record.setEnabled(false);
    Location_Field.setEnabled(true);
    Color_Combo.setEnabled(true);
    Temperature_Field.setEnabled(true);
    Updraft_Combo.setEnabled(true);
    
    Location_Field.setText("");
    Color_Combo.setSelectedIndex(0); 
    Updraft_Combo.setSelectedIndex(0); 
    Temperature_Field.setText("");
    Hail_Likelihood_Field.setText("");
    Hail_Size_Estimate_Field.setText("");
// TODO add your handling code here:
    }//GEN-LAST:event_ResetActionPerformed

    private void Go_BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Go_BackActionPerformed
    this.dispose();
    Prediction_Interface inter = new Prediction_Interface();
    inter.setVisible(true);    // TODO add your handling code here:
    }//GEN-LAST:event_Go_BackActionPerformed

    private void Hail_Likelihood_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hail_Likelihood_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Hail_Likelihood_FieldActionPerformed

    private void Location_FieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Location_FieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Location_FieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Hailstorm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Hailstorm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Hailstorm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Hailstorm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Hailstorm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Color_Combo;
    private javax.swing.JLabel Color_Of_Cloud_Label;
    private javax.swing.JButton Go_Back;
    private javax.swing.JTextField Hail_Likelihood_Field;
    private javax.swing.JLabel Hail_Likelihood_Label;
    private javax.swing.JTextField Hail_Size_Estimate_Field;
    private javax.swing.JLabel Hail_Size_Estimate_Label;
    private javax.swing.JLabel Hailstorm_Title;
    private javax.swing.JTextField Location_Field;
    private javax.swing.JLabel Location_Label;
    private javax.swing.JButton Predict;
    private javax.swing.JLabel Prediction_Label;
    private javax.swing.JButton Record;
    private javax.swing.JButton Reset;
    private javax.swing.JTextField Temperature_Field;
    private javax.swing.JLabel Temperature_Label;
    private javax.swing.JComboBox<String> Updraft_Combo;
    private javax.swing.JLabel Updraft_Label;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel;
    // End of variables declaration//GEN-END:variables
}
